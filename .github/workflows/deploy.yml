name: Deploy to EC2 Windows Server

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Windows Server
        run: |
          $ErrorActionPreference = 'Stop'

          # Convertir contraseña a cadena segura
          $password = ConvertTo-SecureString $env:WINDOWS_PASSWORD -AsPlainText -Force

          # Crear objeto de credencial
          $cred = New-Object System.Management.Automation.PSCredential("administrator", $password)

          # Establecer una nueva sesión PSSession
          $session = New-PSSession -ComputerName 54.173.51.17 -Credential $cred -Authentication Default -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck)

          # Verificar si la sesión fue creada exitosamente
          if (-not $session) {
              Write-Error "Failed to create PSSession."
              exit 1
          }

          # Ejecutar comandos en el servidor remoto con registro detallado
          Invoke-Command -Session $session -ScriptBlock {
            try {
              $repoPath = "C:\inetpub\wwwroot\core.deliver.ar"
              $repoUrl = "https://github.com/gerfalasco/xwallet_frontend"

              # Verificar si el directorio de destino existe
              if (-Not (Test-Path -Path $repoPath)) {
                Write-Output "Creating target directory: $repoPath"
                New-Item -Path $repoPath -ItemType Directory | Out-Null
              }

              cd $repoPath
              Write-Output "Navigated to the target directory: $repoPath"

              # Verificar si el directorio está vacío
              $isEmpty = -not (Get-ChildItem -Path $repoPath -Recurse | Where-Object { -not $_.PSIsContainer })

              if ($isEmpty) {
                Write-Output "Directory is empty. Cloning repository."
                git clone $repoUrl .
                cd $repoPath
                git checkout develop
              } elseif (Test-Path -Path ".git") {
                Write-Output "Git repository found. Pulling latest changes from develop branch."
                git fetch origin
                git reset --hard origin/develop
              } else {
                Write-Output "Directory is not empty and no git repository found. Removing existing files and cloning repository."
                Remove-Item -Recurse -Force * -ErrorAction SilentlyContinue
                git clone $repoUrl .
                cd $repoPath
                git checkout develop
              }

              # Validar la operación de git
              if ($LASTEXITCODE -ne 0) {
                throw "Git operation failed with exit code: $LASTEXITCODE"
              }

            } catch {
              Write-Error "An error occurred during the git operations: $_"
              exit 1
            }
          } -ErrorAction Stop

          # Eliminar la sesión PSSession
          Remove-PSSession -Session $session
        env:
          WINDOWS_PASSWORD: ${{ secrets.WINDOWS_PASSWORD }}

