{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor() {\n      this._customerSource$ = new BehaviorSubject(null);\n    } // Exposing the current value as an Observable\n\n\n    get customerSource$() {\n      return this._customerSource$.asObservable();\n    } // Direct access to the current value\n\n\n    get currentCustomer() {\n      return this._customerSource$.value;\n    }\n\n    changeData(data) {\n      this._customerSource$.next(data);\n    }\n\n  }\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}